// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: refresh_tokens.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const addRefreshToken = `-- name: AddRefreshToken :one
INSERT INTO refresh_tokens (token, user_id) 
VALUES (
    $1,
    $2
) RETURNING token
`

type AddRefreshTokenParams struct {
	Token  string
	UserID uuid.UUID
}

func (q *Queries) AddRefreshToken(ctx context.Context, arg AddRefreshTokenParams) (string, error) {
	row := q.db.QueryRowContext(ctx, addRefreshToken, arg.Token, arg.UserID)
	var token string
	err := row.Scan(&token)
	return token, err
}

const revokeToken = `-- name: RevokeToken :exec
UPDATE refresh_tokens
SET    revoked_at = NOW(),
       updated_at = NOW()
WHERE  token = $1
`

func (q *Queries) RevokeToken(ctx context.Context, token string) error {
	_, err := q.db.ExecContext(ctx, revokeToken, token)
	return err
}
